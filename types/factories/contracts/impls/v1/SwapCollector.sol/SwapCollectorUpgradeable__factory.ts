/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  SwapCollectorUpgradeable,
  SwapCollectorUpgradeableInterface,
} from "../../../../../contracts/impls/v1/SwapCollector.sol/SwapCollectorUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "channel",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "quote",
        type: "bytes",
      },
    ],
    name: "parseQuoteData",
    outputs: [
      {
        internalType: "address",
        name: "sellToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "buyToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sellAmount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506104c8806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636743944b14610030575b600080fd5b61004361003e3660046102a1565b61006d565b604080516001600160a01b0394851681529390921660208401529082015260600160405180910390f35b60008080806100bc610082600483888a61032c565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061017c92505050565b90506001600160e01b031981166336e57cb760e01b14156100fd576100e4856004818961032c565b8101906100f19190610372565b91955093509150610172565b60ff871661010f576100f18686610183565b8660ff1660011415610125576100f18686610210565b60405162461bcd60e51b815260206004820152601e60248201527f53776170436f6c6c6563746f723a2057726f6e6720506172616d65746572000060448201526064015b60405180910390fd5b5093509350939050565b6020015190565b6000808080610198610082600483888a61032c565b604080516060810190915260228082529192506001600160e01b03198316630415565b60e41b14916104716020830139906101e65760405162461bcd60e51b815260040161016991906103ae565b506101f4856004818961032c565b8101906102019190610372565b91989097509095509350505050565b6000808080610225610082600483888a61032c565b604080516060810190915260228082529192506001600160e01b031983166312aa3caf60e01b14916104716020830139906102735760405162461bcd60e51b815260040161016991906103ae565b50610281856004818961032c565b81019061028e9190610403565b939b929a50929850909650505050505050565b6000806000604084860312156102b657600080fd5b833560ff811681146102c757600080fd5b9250602084013567ffffffffffffffff808211156102e457600080fd5b818601915086601f8301126102f857600080fd5b81358181111561030757600080fd5b87602082850101111561031957600080fd5b6020830194508093505050509250925092565b6000808585111561033c57600080fd5b8386111561034957600080fd5b5050820193919092039150565b80356001600160a01b038116811461036d57600080fd5b919050565b60008060006060848603121561038757600080fd5b61039084610356565b925061039e60208501610356565b9150604084013590509250925092565b600060208083528351808285015260005b818110156103db578581018301518582016040015282016103bf565b818111156103ed576000604083870101525b50601f01601f1916929092016040019392505050565b60008060008060008060c0878903121561041c57600080fd5b61042587610356565b955061043360208801610356565b945061044160408801610356565b935061044f60608801610356565b925061045d60808801610356565b915060a08701359050929550929550929556fe53776170436f6c6c6563746f723a2057726f6e672066756e6374696f6e2063616c6ca2646970667358221220803a21d153d023e438d558b7c97fb14aa475afce7e6364ee1926f77ee88a0da664736f6c63430008080033";

type SwapCollectorUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapCollectorUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapCollectorUpgradeable__factory extends ContractFactory {
  constructor(...args: SwapCollectorUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapCollectorUpgradeable> {
    return super.deploy(overrides || {}) as Promise<SwapCollectorUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SwapCollectorUpgradeable {
    return super.attach(address) as SwapCollectorUpgradeable;
  }
  override connect(signer: Signer): SwapCollectorUpgradeable__factory {
    return super.connect(signer) as SwapCollectorUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapCollectorUpgradeableInterface {
    return new utils.Interface(_abi) as SwapCollectorUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapCollectorUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SwapCollectorUpgradeable;
  }
}
